name: Deploy to Cloudflare

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # … your Terraform & dummy‐worker steps …

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          cache: 'npm'

      # 1️⃣ Generate a `.env.production` right before building…
      - name: Emit .env.production
        run: |
          cat <<EOF > .env.production
          PLEX=${{ secrets.PLEX }}
          OVERSEERR=${{ secrets.OVERSEERR }}
          RADARR=${{ secrets.RADARR }}
          SONARR=${{ secrets.SONARR }}
          NZBGET=${{ secrets.NZBGET }}
          UN_SERVER=${{ secrets.UN_SERVER }}
          CLOUDFLARE=${{ secrets.CLOUDFLARE }}
          HA=${{ secrets.HA }}
          UPTIME_KEY=${{ secrets.UPTIME_KEY }}
          EOF

      # 2️⃣ Install & build your Worker (still “dry‐run” so you can inject secrets via Wrangler)
      - name: Build Worker (dry-run)
        run: |
          cd worker
          npm ci
          npx wrangler deploy src/index.ts --outdir dist --dry-run
        env:
          # Wrangler will pick these up as bindings
          PLEX:          ${{ secrets.PLEX }}
          OVERSEERR:     ${{ secrets.OVERSEERR }}
          RADARR:        ${{ secrets.RADARR }}
          SONARR:        ${{ secrets.SONARR }}
          NZBGET:        ${{ secrets.NZBGET }}
          UN_SERVER:     ${{ secrets.UN_SERVER }}
          CLOUDFLARE:    ${{ secrets.CLOUDFLARE }}
          HA:            ${{ secrets.HA }}
          UPTIME_KEY:    ${{ secrets.UPTIME_KEY }}
          CF_ACCOUNT_ID: ${{ steps.fetch_account_id.outputs.account_id }}
          CF_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # 3️⃣ Install & build your Next.js status-page
      - name: Install & Build status-page
        env:
          # Next-on-Pages sees these at build-time
          PLEX:          ${{ secrets.PLEX }}
          OVERSEERR:     ${{ secrets.OVERSEERR }}
          RADARR:        ${{ secrets.RADARR }}
          SONARR:        ${{ secrets.SONARR }}
          NZBGET:        ${{ secrets.NZBGET }}
          UN_SERVER:     ${{ secrets.UN_SERVER }}
          CLOUDFLARE:    ${{ secrets.CLOUDFLARE }}
          HA:            ${{ secrets.HA }}
          UPTIME_KEY:    ${{ secrets.UPTIME_KEY }}
        run: |
          npm ci
          npx @cloudflare/next-on-pages

      # 4️⃣ Terraform + durable objects + Pages deploy
      - name: Terraform Apply & Wrangler Pages Deploy
        run: |
          # … your existing terraform import & apply …
          npx wrangler pages deploy .vercel/output/static --project-name uptimeflare
        env:
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ steps.fetch_account_id.outputs.account_id }}